/* 
	Copyright (c) 2017-2018 Azeez Adewale <azeezadewale98@gmail.com> 
	MIT License Copyright (c) 2018 simple 
	Type.sim

*/

call "simple/utilities/Type.sim"

block main()
	str = "asas6565sas32a"
	alpha = "ABCDEFGHIJKLMNOPQRSTUVWXYZ"
	alphal = "abcdefghijklmnopqrstuvwxyz"
	digit = 0123456789
	space = "        "
	hex = "0123456789abcdef"
	punct = "#$%&'()*+,-./:;<=>?@[\]^_`{|}~"
	control = nl+crlf+tab
	list = [str,alpha,space,hex,alphal,digit,punct,control]
	listLen = lengthOf(list)
	
	@"checking the following values"
	for a = 0 to listLen {
		display " " + list[a]
	}
	
	@nl+"AlphaNum"
	for a = 0 to listLen {
		display "	" + isAlphaNum(list[a])
	}
	
	@nl+"Alpha"
	for a = 0 to listLen {
		display "	" + isAlpha(list[a])
	}
	
	@nl+"Digit"
	for a = 0 to listLen {
		display "	" + isDigit(list[a])
	}
	
	@nl+"Control"
	for a = 0 to listLen {
		display "	" + isControlChar(list[a])
	}
	
	@nl+"Graph"
	for a = 0 to listLen {
		display "	" + isGraphical(list[a])
	}
	
	@nl+"Lower"
	for a = 0 to 4 {
		display "	" + isLowerCase(list[a])
	}
	
	@nl+"Upper"
	for a = 0 to 4 {
		display "	" + isUpperCase(list[a])
	}
	
	@nl+"Print"
	for a = 0 to listLen {
		display "	" + isPrintable(list[a])
	}
	
	@nl+"Space"
	for a = 0 to listLen {
		display "	" + __isWhiteSpace(list[a])+' '+isWhiteSpace(list[a])
	}
	
	@nl+"Punct"
	for a = 0 to listLen {
		display "	" + isPunctuation(list[a])
	}
	
	@nl+"HexDigit"
	for a = 0 to listLen {
		display "	" + isHexDigit(list[a])
	}
	
	
	
	